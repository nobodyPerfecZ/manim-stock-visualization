name: Check Format

on:
  push:
    branches:
      - master
      - main

jobs:
  run-unittests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    name: ${{ matrix.os }} python-${{ matrix.python-version }}
    steps:
      - name: Set up the repository
        uses: actions/checkout@v4
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Set up Python ${{ matrix.python-version }}
        run: |
          uv venv --python ${{ matrix.python-version }}
          echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          uv pip install -r pyproject.toml
          uv pip install --group dev
      - name: Check Format with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 --exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. Black has 88 max-line-length
          flake8 --exclude .venv --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
